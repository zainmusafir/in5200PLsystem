<certe_dump>
  <instance type=" psif_scu_test "> 
     uvm_test_top 
  
     <instance type=" tb_env "> 
        m_env 
  
        <instance type=" coverage_override "> 
           coverage_override_h 
        </instance> 
  
  
        <instance type=" kb_axi4stream_agent "> 
           m_kb_axi4stream_agent 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              ap 
           </port> 
  
           <instance type=" kb_axi4stream_agent_driver "> 
              m_driver 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 rsp_port 
              </port> 
  
              <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                 seq_item_port 
                 <connection>  uvm_test_top.m_env.m_kb_axi4stream_agent.sequencer.seq_item_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" kb_axi4stream_agent_monitor "> 
              m_monitor 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 ap 
                 <connection>  uvm_test_top.m_env.m_kb_axi4stream_agent.ap  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" uvm_sequencer "> 
              sequencer 
  
              <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                 rsp_export 
                 <connection>  uvm_test_top.m_env.m_kb_axi4stream_agent.sequencer.sqr_rsp_analysis_fifo.analysis_export  </connection> 
              </export> 
  
              <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                 seq_item_export 
              </imp> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" oled_spi_agent "> 
           m_oled_spi_agent 
  
           <instance type=" oled_spi_agent_monitor "> 
              m_monitor 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 ap 
                 <connection>  uvm_test_top.m_env.m_scoreboard_oled_spi_base.oled_spi_monitor_out.analysis_export  </connection> 
              </port> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" kb_axi4lite_agent "> 
           m_psif_axi4lite_master_agent 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              ap 
           </port> 
  
           <instance type=" kb_axi4lite_agent_driver "> 
              m_driver 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 rsp_port 
              </port> 
  
              <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                 seq_item_port 
                 <connection>  uvm_test_top.m_env.m_psif_axi4lite_master_agent.sequencer.seq_item_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" kb_axi4lite_agent_coverage_monitor "> 
              m_fcov_monitor 
  
              <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
                 analysis_imp 
              </imp> 
           </instance> 
  
  
           <instance type=" kb_axi4lite_agent_monitor "> 
              m_monitor 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 ap 
                 <connection>  uvm_test_top.m_env.m_psif_axi4lite_master_agent.ap  </connection> 
                 <connection>  uvm_test_top.m_env.m_psif_axi4lite_master_agent.m_fcov_monitor.analysis_imp  </connection> 
                 <connection>  uvm_test_top.m_psif_reg_predictor_all.bus_in  </connection> 
                 <connection>  uvm_test_top.m_psif_reg_predictor_rw.bus_in  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" uvm_sequencer "> 
              sequencer 
  
              <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                 rsp_export 
                 <connection>  uvm_test_top.m_env.m_psif_axi4lite_master_agent.sequencer.sqr_rsp_analysis_fifo.analysis_export  </connection> 
              </export> 
  
              <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                 seq_item_export 
              </imp> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" reset_agent "> 
           m_reset_agent 
  
           <instance type=" reset_agent_driver "> 
              m_driver 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 rsp_port 
              </port> 
  
              <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                 seq_item_port 
                 <connection>  uvm_test_top.m_env.m_reset_agent.sequencer.seq_item_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" uvm_sequencer "> 
              sequencer 
  
              <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                 rsp_export 
                 <connection>  uvm_test_top.m_env.m_reset_agent.sequencer.sqr_rsp_analysis_fifo.analysis_export  </connection> 
              </export> 
  
              <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                 seq_item_export 
              </imp> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" scoreboard_oled_spi_base "> 
           m_scoreboard_oled_spi_base 
  
           <instance type=" uvm_tlm_analysis_fifo #(T) "> 
              oled_spi_monitor_out 
  
              <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
                 analysis_export 
              </imp> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 get_ap 
              </port> 
  
              <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
                 get_peek_export 
              </imp> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 put_ap 
              </port> 
  
              <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
                 put_export 
              </imp> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" scoreboard_zu_base "> 
           m_scoreboard_zu_base 
        </instance> 
  
  
        <instance type=" scoreboard_override "> 
           scoreboard_override_h 
        </instance> 
  
     </instance> 
  
  
     <instance type=" uvm_reg_predictor #(kb_axi4lite_agent_item) "> 
        m_psif_reg_predictor_all 
  
        <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
           bus_in 
        </imp> 
  
        <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
           reg_ap 
        </port> 
     </instance> 
  
  
     <instance type=" uvm_reg_predictor #(kb_axi4lite_agent_item) "> 
        m_psif_reg_predictor_rw 
  
        <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
           bus_in 
        </imp> 
  
        <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
           reg_ap 
        </port> 
     </instance> 
  
  </instance> 
  
  </certe_dump>